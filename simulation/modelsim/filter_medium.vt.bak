// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "11/14/2015 17:56:28"
                                                                                
// Verilog Test Bench template for design : filter_medium
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module filter_medium_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg clk_f_nios;
reg [7:0] dt_f_nios;
reg rst_f_nios;
integer i;
// wires                                               
wire clk_out;
wire [15:0]  data_raw;

// assign statements (if any)                          
filter_medium i1 (
// port map - connection between master ports and signals/registers   
	.clk_f_nios(clk_f_nios),
	.clk_out(clk_out),
	.data_raw(data_raw),
	.dt_f_nios(dt_f_nios),
	.rst_f_nios(rst_f_nios)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
    rst_f_nios = 1'b1;
    clk_f_nios = 1'b0;    
    dt_f_nios = 8'h00;
    #5;
    rst_f_nios = 1'b0;                                               
// --> end                                             
$display("Running testbench");                       
end 
initial begin
  #3;
  forever #10 clk_f_nios = ~ clk_f_nios;   
end                                                
always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin  
   #2;                        
   dt_f_nios = 8'h00;
   #20;
   dt_f_nios = 8'hFF;
   #20;
   dt_f_nios = 8'h00;
   #20;
   dt_f_nios = 8'hFF;
   #20;
   dt_f_nios = 8'h00;
   #20;
   dt_f_nios = 8'hFF;
   #20;
   dt_f_nios = 8'hFF;
   #20;
   dt_f_nios = 8'h00;
   #20;
   dt_f_nios = 8'h00;
   #20;
   
   #20;
   ////////////////////
   dt_f_nios = 8'h00;
   #20;
   dt_f_nios = 8'hFF;
   #20;
   dt_f_nios = 8'h00;
   #20;
   dt_f_nios = 8'hFF;
   #20;
   dt_f_nios = 8'h00;
   #20;
   dt_f_nios = 8'hFF;
   #20;
   dt_f_nios = 8'h00;
   #20;
   dt_f_nios = 8'hFF;
   #20;
   dt_f_nios = 8'hFF;
   /////
   #20;
   #20;  
   dt_f_nios = 8'hFF;
   #20;
   dt_f_nios = 8'hFF;
   #20;
   dt_f_nios = 8'h00;
   #20;
   dt_f_nios = 8'hFF;
   #20;
   dt_f_nios = 8'h00;
   #20;
   dt_f_nios = 8'hFF;
   #20;
   dt_f_nios = 8'h00;
   #20;
   dt_f_nios = 8'hFF;
   #20;
   dt_f_nios = 8'h00;   
   #60;   
   
   
   
   $finish;      
                                      
@eachvec;                                              
// --> end                                             
end                                                    
endmodule

