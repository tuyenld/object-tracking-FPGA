--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_ppa
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode8296w[1..0]	: WIRE;
	w_anode8305w[3..0]	: WIRE;
	w_anode8322w[3..0]	: WIRE;
	w_anode8332w[3..0]	: WIRE;
	w_anode8342w[3..0]	: WIRE;
	w_anode8352w[3..0]	: WIRE;
	w_anode8362w[3..0]	: WIRE;
	w_anode8372w[3..0]	: WIRE;
	w_anode8382w[3..0]	: WIRE;
	w_anode8394w[1..0]	: WIRE;
	w_anode8401w[3..0]	: WIRE;
	w_anode8412w[3..0]	: WIRE;
	w_anode8422w[3..0]	: WIRE;
	w_anode8432w[3..0]	: WIRE;
	w_anode8442w[3..0]	: WIRE;
	w_anode8452w[3..0]	: WIRE;
	w_anode8462w[3..0]	: WIRE;
	w_anode8472w[3..0]	: WIRE;
	w_data8294w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode8472w[3..3], w_anode8462w[3..3], w_anode8452w[3..3], w_anode8442w[3..3], w_anode8432w[3..3], w_anode8422w[3..3], w_anode8412w[3..3], w_anode8401w[3..3]), ( w_anode8382w[3..3], w_anode8372w[3..3], w_anode8362w[3..3], w_anode8352w[3..3], w_anode8342w[3..3], w_anode8332w[3..3], w_anode8322w[3..3], w_anode8305w[3..3]));
	w_anode8296w[] = ( (w_anode8296w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode8305w[] = ( (w_anode8305w[2..2] & (! w_data8294w[2..2])), (w_anode8305w[1..1] & (! w_data8294w[1..1])), (w_anode8305w[0..0] & (! w_data8294w[0..0])), w_anode8296w[1..1]);
	w_anode8322w[] = ( (w_anode8322w[2..2] & (! w_data8294w[2..2])), (w_anode8322w[1..1] & (! w_data8294w[1..1])), (w_anode8322w[0..0] & w_data8294w[0..0]), w_anode8296w[1..1]);
	w_anode8332w[] = ( (w_anode8332w[2..2] & (! w_data8294w[2..2])), (w_anode8332w[1..1] & w_data8294w[1..1]), (w_anode8332w[0..0] & (! w_data8294w[0..0])), w_anode8296w[1..1]);
	w_anode8342w[] = ( (w_anode8342w[2..2] & (! w_data8294w[2..2])), (w_anode8342w[1..1] & w_data8294w[1..1]), (w_anode8342w[0..0] & w_data8294w[0..0]), w_anode8296w[1..1]);
	w_anode8352w[] = ( (w_anode8352w[2..2] & w_data8294w[2..2]), (w_anode8352w[1..1] & (! w_data8294w[1..1])), (w_anode8352w[0..0] & (! w_data8294w[0..0])), w_anode8296w[1..1]);
	w_anode8362w[] = ( (w_anode8362w[2..2] & w_data8294w[2..2]), (w_anode8362w[1..1] & (! w_data8294w[1..1])), (w_anode8362w[0..0] & w_data8294w[0..0]), w_anode8296w[1..1]);
	w_anode8372w[] = ( (w_anode8372w[2..2] & w_data8294w[2..2]), (w_anode8372w[1..1] & w_data8294w[1..1]), (w_anode8372w[0..0] & (! w_data8294w[0..0])), w_anode8296w[1..1]);
	w_anode8382w[] = ( (w_anode8382w[2..2] & w_data8294w[2..2]), (w_anode8382w[1..1] & w_data8294w[1..1]), (w_anode8382w[0..0] & w_data8294w[0..0]), w_anode8296w[1..1]);
	w_anode8394w[] = ( (w_anode8394w[0..0] & data_wire[3..3]), enable_wire);
	w_anode8401w[] = ( (w_anode8401w[2..2] & (! w_data8294w[2..2])), (w_anode8401w[1..1] & (! w_data8294w[1..1])), (w_anode8401w[0..0] & (! w_data8294w[0..0])), w_anode8394w[1..1]);
	w_anode8412w[] = ( (w_anode8412w[2..2] & (! w_data8294w[2..2])), (w_anode8412w[1..1] & (! w_data8294w[1..1])), (w_anode8412w[0..0] & w_data8294w[0..0]), w_anode8394w[1..1]);
	w_anode8422w[] = ( (w_anode8422w[2..2] & (! w_data8294w[2..2])), (w_anode8422w[1..1] & w_data8294w[1..1]), (w_anode8422w[0..0] & (! w_data8294w[0..0])), w_anode8394w[1..1]);
	w_anode8432w[] = ( (w_anode8432w[2..2] & (! w_data8294w[2..2])), (w_anode8432w[1..1] & w_data8294w[1..1]), (w_anode8432w[0..0] & w_data8294w[0..0]), w_anode8394w[1..1]);
	w_anode8442w[] = ( (w_anode8442w[2..2] & w_data8294w[2..2]), (w_anode8442w[1..1] & (! w_data8294w[1..1])), (w_anode8442w[0..0] & (! w_data8294w[0..0])), w_anode8394w[1..1]);
	w_anode8452w[] = ( (w_anode8452w[2..2] & w_data8294w[2..2]), (w_anode8452w[1..1] & (! w_data8294w[1..1])), (w_anode8452w[0..0] & w_data8294w[0..0]), w_anode8394w[1..1]);
	w_anode8462w[] = ( (w_anode8462w[2..2] & w_data8294w[2..2]), (w_anode8462w[1..1] & w_data8294w[1..1]), (w_anode8462w[0..0] & (! w_data8294w[0..0])), w_anode8394w[1..1]);
	w_anode8472w[] = ( (w_anode8472w[2..2] & w_data8294w[2..2]), (w_anode8472w[1..1] & w_data8294w[1..1]), (w_anode8472w[0..0] & w_data8294w[0..0]), w_anode8394w[1..1]);
	w_data8294w[2..0] = data_wire[2..0];
END;
--VALID FILE
